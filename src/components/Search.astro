---
import howler from 'howler';
---

<!-- Wrap the component elements in our custom element “astro-heart”. -->
<astro-search>
<style>
        input[type="text"] {
          width: 300px;
          padding: 5px;
        }
        button {
          padding: 5px 10px;
        }
        ul {
          list-style: none;
          margin: 0;
          padding: 0;
        }
        li {
          margin-bottom: 5px;
        }
      </style>
      <input type="text" placeholder="Search...">
      <button>Search</button>
      <ul></ul>
</astro-search>

<script>
import howler from 'howler';

class AstroSearch extends HTMLElement {
  constructor() {
    super();
    const shadow = this.attachShadow({ mode: 'open' });
    shadow.innerHTML = `
      <style>
        input[type="text"] {
          width: 300px;
          padding: 5px;
        }
        button {
          padding: 5px 10px;
        }
        ul {
          list-style: none;
          margin: 0;
          padding: 0;
        }
        li {
          margin-bottom: 5px;
        }
      </style>
      <input type="text" placeholder="Search...">
      <button>Search</button>
      <ul></ul>
    `;


    const searchInput = shadow.querySelector('input');
    const searchButton = shadow.querySelector('button');
    const resultsList = shadow.querySelector('ul');

    let searchResults = [];

    function displayResults(tracks) {
      resultsList.innerHTML = '';
      for (const track of tracks) {
        const listItem = document.createElement('li');
        const playButton = document.createElement('button');
        playButton.innerHTML = 'Play';
        const audio = new Howl({ src: [] });
        playButton.addEventListener('click', () => {
          fetch(`https://audius-discovery-6.cultur3stake.com/v1/tracks/${track.id}/stream`)
            .then(response => response.json())
            .then(data => {
              audio.src = [data.stream_url];
              audio.play();
            });
        });
        listItem.innerHTML = `${track.title} - ${track.user.handle}`;
        listItem.appendChild(playButton);
        resultsList.appendChild(listItem);
      }
    }

    async function searchAudius(query) {
      const response = await fetch(`https://audius-discovery-6.cultur3stake.com/v1/tracks/search?query=${query}`);
      const data = await response.json();
      searchResults = data.data;
      displayResults(searchResults);
    }

    searchButton.addEventListener('click', () => {
      const query = searchInput.value;
      searchAudius(query);
    });
  }
}

customElements.define('astro-search', AstroSearch);

</script>